import numpy as np
from Sources import IntensityHarmonic3D, PlaneWave
from Box import Box
from VectorOperations import VectorOperations

theta = np.pi / 4
b = 1
k = 2 * np.pi
k1 = k * np.sin(theta)
k2 = k * (np.cos(theta) - 1)

vec_x = np.array((k * np.sin(theta), 0, k * np.cos(theta)))
vec_mx = np.array((-k * np.sin(theta), 0, k * np.cos(theta)))
ax_z = np.array((0, 0, 1))

a0 = 2 + 8 * b**2
sources = [
    PlaneWave(0, b/a0**0.5, 0, 0, vec_x),
    PlaneWave(0, b/a0**0.5, 0, 0, vec_mx),
    PlaneWave(0, b/a0**0.5, 0, 0, VectorOperations.rotate_vector3d(vec_x, ax_z, np.pi/4)),
    PlaneWave(0, b/a0**0.5, 0, 0, VectorOperations.rotate_vector3d(vec_mx, ax_z,  np.pi/4)),
    PlaneWave(0, b/a0**0.5, 0, 0, VectorOperations.rotate_vector3d(vec_x, ax_z,  np.pi/2)),
    PlaneWave(0, b/a0**0.5, 0, 0, VectorOperations.rotate_vector3d(vec_mx, ax_z,  np.pi/2)),
    PlaneWave(0, b/a0**0.5, 0, 0, VectorOperations.rotate_vector3d(vec_x, ax_z, 3 * np.pi/4)),
    PlaneWave(0, b/a0**0.5, 0, 0, VectorOperations.rotate_vector3d(vec_mx, ax_z, 3 * np.pi/4)),

    PlaneWave(1/a0**0.5, 1j /a0**0.5, 0, 0, np.array((0, 0, k))),
]

info = """
b = {}
""".format(b)
box_size = (20, 20, 80)
point_number = 100