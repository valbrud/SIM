import numpy as np
from Sources import IntensityPlaneWave, PlaneWave
from Box import Box
from VectorOperations import VectorOperations

theta = np.pi / 4
b = 1
k = 2 * np.pi
k1 = k * np.sin(theta)
k2 = k * (np.cos(theta) - 1)

vec_x = np.array((k * np.sin(theta), 0, k * np.cos(theta)))
vec_mx = np.array((-k * np.sin(theta), 0, k * np.cos(theta)))
ax_z = np.array((0, 0, 1))

sources = [
    # IntensityPlaneWave(2 + 4 * b ** 2, 0, np.array((0, 0, 0))),
    # IntensityPlaneWave(-b ** 2, 0, np.array((-2 * k1, 0, 0))),
    # IntensityPlaneWave(-b ** 2, 0, np.array((2 * k1, 0, 0))),
    # IntensityPlaneWave(-b ** 2, 0, np.array((0, 2 * k1, 0))),
    # IntensityPlaneWave(-b ** 2, 0, np.array((0, -2 * k1, 0))),
    # IntensityPlaneWave(-1j * b, 0, np.array((k1, 0, k2))),
    # IntensityPlaneWave(1j * b, 0, np.array((-k1, 0, k2))),
    # IntensityPlaneWave(-1 * b, 0, np.array((0, k1, k2))),
    # IntensityPlaneWave(1 * b, 0, np.array((0, -k1, k2))),
    # IntensityPlaneWave(-1j * b, 0, np.array((k1, 0, -k2))),
    # IntensityPlaneWave(1j * b, 0, np.array((-k1, 0, -k2))),
    # IntensityPlaneWave(1 * b, 0, np.array((0, k1, -k2))),
    # IntensityPlaneWave(-1 * b, 0, np.array((0, -k1, -k2))),


    PlaneWave(0, b, 0, 0, vec_x),
    PlaneWave(0, b, 0, 0, vec_mx),
    PlaneWave(0, b, 0, 0, VectorOperations.rotate_vector3d(vec_x, ax_z, np.pi/3)),
    PlaneWave(0, b, 0, 0, VectorOperations.rotate_vector3d(vec_mx, ax_z, np.pi/3)),
    PlaneWave(0, b, 0, 0, VectorOperations.rotate_vector3d(vec_x, ax_z, 2 * np.pi/3)),
    PlaneWave(0, b, 0, 0, VectorOperations.rotate_vector3d(vec_mx, ax_z, 2 * np.pi/3)),

    PlaneWave(1, 1j * 1, 0, 0, np.array((0, 0, k))),
]

info = """
b = {}
""".format(b)
box_size = 6
point_number = 40
